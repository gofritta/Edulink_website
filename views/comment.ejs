<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Comment Section</title>
    <style>
        body {
            background-color: #f0e6f2; 
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        h1, h2 {
            color: #4b0082; 
            text-align: center;
        }

        form {
            margin-bottom: 20px;
            text-align: center;
        }

        textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        button {
            background-color: #4b0082;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 10px;
            cursor: pointer;
            
        }

        button:hover {
            background-color: #6a5acd; 
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background-color: #fff; 
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); 
        }

        .user-info {
            color: #4b0082; 
            font-weight: bold;
            margin-bottom: 5px;
        }

        .comment-text {

            margin-bottom: 10px;
        }

        .likes{

          font-size: x-small;
        }
        .date {
            font-size:x-small;
            color: #808080; 
        }

        .like-btn {
    cursor: pointer;
    color: #aaa; 
      }

      .like-btn.active {
    color: rgba(213, 12, 12, 0.811) 
      }


      .glow-on-hover {
    width: 220px;
    height: 50px;
    border: none;
    outline: none;
    color: #fff;
    background: #e687e9;
    cursor: pointer;
    position: relative;
    z-index: 0;
    border-radius: 10px;
}

.glow-on-hover:before {
    content: '';
    background: purple;
    position: absolute;
    top: -2px;
    left:-2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 10px;
}

.glow-on-hover:active {
    color: #e8b9ec
}

.glow-on-hover:active:after {
    background: transparent;
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #4b0082;
    left: 0;
    top: 0;
    border-radius: 10px;
}

@keyframes glowing {
    0% { background-position: 0 0; }
    50% { background-position: 400% 0; }
    100% { background-position: 0 0; }
}
    </style>
</head>
<body>
    <h1>Comment Section</h1>
    
    
    <form action="/comments/comment" method="POST">
      <textarea id="comment" name="comment" rows="4" required cols="50" placeholder="Write your comment here..."></textarea><br>
      <input type="hidden" name="schoolId" value="<%- schoolId %>">
      <button class="glow-on-hover" type="submit">add comment!</button>
  </form>

    <h2>Comments</h2>
    <ul>
        <% reviews.forEach(review => { %>
            <li id="comment_<%= review.comment_id %>">
                <div class="user-info">
                    <%= review.user_name %>
                    <span class="date">(<%= review.comment_date %>)</span>
                </div>
                <div class="comment-text"><%= review.comment_text %></div>
                <div class="likes">Likes: <span id="likes_<%= review.comment_id %>"><%= review.likes_count %></span></div>
                <div class="comment-actions">
                    <button class="like-btn <%= review.liked_by_current_user ? 'active' : '' %>" data-comment-id="<%= review.comment_id %>">
                        <i class="fas fa-heart"></i>
                    </button>
                    <button class="delete-btn" data-comment-id="<%= review.comment_id %>"><i class="fas fa-trash"></i></button>
                </div>
            </li>
        <% }) %>
    </ul>
    
     <script>
    document.addEventListener('DOMContentLoaded', () => {
        // Event listener for like buttons
        document.querySelectorAll('.like-btn').forEach(button => {
            const commentId = button.dataset.commentId;

            // Restore the state of liked buttons from local storage
            const isLiked = localStorage.getItem(`liked_${commentId}`);
            if (isLiked === 'true') {
                button.classList.add('active');
            }

            // Event listener for click on like button
            button.addEventListener('click', async () => {
                const schoolIdInput = document.querySelector('input[name="schoolId"]');
                const schoolId = schoolIdInput.value;

                if (!button.classList.contains('active')) {
                    try {
                      const response = await fetch(`/comments/like?id=${schoolId}`, {
                          method: 'POST',
                             headers: {
                              'Content-Type': 'application/json'
                          },
                             body: JSON.stringify({ comment_id: commentId })
                           });
                        const data = await response.json();
                        if (data.success) {
                            const likesCount = document.getElementById(`likes_${commentId}`);
                            likesCount.textContent = parseInt(likesCount.textContent) + 1;
                            button.classList.add('active');
                            localStorage.setItem(`liked_${commentId}`, 'true');
                        } else {
                            console.error(data.error);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });
        });

        // Event listener for delete buttons
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', async () => {
                console.log("Delete button clicked");
                const commentId = button.dataset.commentId;
                const schoolIdInput = document.querySelector('input[name="schoolId"]');
                const schoolId = schoolIdInput.value;

                console.log("School ID:", schoolId);
                const confirmDelete = confirm("Are you sure you want to delete this comment?");
                if (confirmDelete) {
                    try {
                        const response = await fetch(`/comments/comment/delete`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ commentId: commentId, schoolId: schoolId })
                        });
                        console.log("Delete request sent");
                        const data = await response.json();
                        console.log("Response data:", data);
                        if (data.success) {
                            const commentElement = document.getElementById(`comment_${commentId}`);
                            commentElement.remove();
                        } else {
                            if (data.error === 'Unauthorized to delete this comment') {
                                alert('You cannot delete this comment.');
                            } else {
                                console.error(data.error);
                            }
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });
        });
    });
</script>
</body>
</html>